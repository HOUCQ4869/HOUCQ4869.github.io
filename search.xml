<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>线性表</title>
      <link href="/2023/01/13/xian-xing-biao/"/>
      <url>/2023/01/13/xian-xing-biao/</url>
      
        <content type="html"><![CDATA[<p><strong>注：数据结构相关内容参考于《数据结构（C语言版）》-严蔚敏 吴伟民编著</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My first blog</title>
      <link href="/2023/01/11/test-post/"/>
      <url>/2023/01/11/test-post/</url>
      
        <content type="html"><![CDATA[<p>Hello, everyone.</p><p>注明：本博客搭建借鉴于<a href="https://xkz0777.github.io/2021/07/19/build-website/">xkz</a>以及<a href="https://ysy-phoenix.github.io/2021/04052690.html">ysy</a>，还有最初的<a href="https://godweiyang.com/2018/04/13/hexo-blog/">godweiyang</a>的博客搭建指南，参考注意有先后顺序，避免一些过时的问题。</p><h2 id="引用图片"><a href="#引用图片" class="headerlink" title="引用图片"></a>引用图片</h2><h3 id="本地资源导入"><a href="#本地资源导入" class="headerlink" title="本地资源导入"></a>本地资源导入</h3><img src="cover.jpg" alt="相对路径图片" style="zoom:33%;" /><p>添加方式：<br>在博客根目录下的_config.yml配置文件中，设置  </p><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过命令hexo new post xxx，在source文件夹中生成xxx.md以及同名资源文件夹，之后如下形式引用：  </p><pre class="line-numbers language-none"><code class="language-none">&lt;img src&#x3D;&quot;cover.jpg&quot; alt&#x3D;&quot;相对路径图片&quot; style&#x3D;&quot;zoom:33%;&quot; &#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="图床上传"><a href="#图床上传" class="headerlink" title="图床上传"></a>图床上传</h3><p><a href="https://imgse.com/i/pSKHRX9"><img src="https://s1.ax1x.com/2023/01/13/pSKHRX9.md.jpg" alt="图床照片"></a></p><p>添加方式：<br>搜索图床，选择合适的即可，可参考<a href="https://imgse.com/">这里</a></p><h2 id="添加友情链接"><a href="#添加友情链接" class="headerlink" title="添加友情链接"></a>添加友情链接</h2><p>在根目录sourse&#x2F;_data&#x2F;friends.json文件下设置，例如：  </p><pre class="line-numbers language-none"><code class="language-none">[  &#123;    &quot;avatar&quot;: &quot;https:&#x2F;&#x2F;ysy-phoenix.github.io&#x2F;medias&#x2F;avatar.jpg&quot;,    &quot;name&quot;: &quot;ysy&quot;,    &quot;introduction&quot;: &quot;ysy&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;ysy-phoenix.github.io&#x2F;&quot;,    &quot;title&quot;: &quot;ysy的博客&quot;  &#125;,  &#123;    &quot;avatar&quot;: &quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;07&#x2F;12&#x2F;zWQo2VrLBstvDEU.jpg&quot;,    &quot;name&quot;: &quot;lly&quot;,    &quot;introduction&quot;: &quot;lly&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;home.ustc.edu.cn&#x2F;~liuly0322&#x2F;blog&#x2F;&quot;,    &quot;title&quot;: &quot;lly的博客&quot;  &#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="访问速度优化"><a href="#访问速度优化" class="headerlink" title="访问速度优化"></a>访问速度优化</h2><h3 id="部署至Coding"><a href="#部署至Coding" class="headerlink" title="部署至Coding"></a>部署至Coding</h3><p>该部分参考于<a href="https://zhuanlan.zhihu.com/p/466268978">这篇文章</a><br>-&gt;首先到<a href="https://coding.net/">官网</a>上进行注册<br>-&gt;创建项目(全功能DevOps项目)，项目名可以使github用户名<br>-&gt;创建代码仓库，仓库名用username.github.io，注意是公开仓库<br>-&gt;在仓库中将其地址复制至博客根目录下配置文件：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy:- type: git  repository:     github: https:&#x2F;&#x2F;github.com&#x2F;HOUCQ4869&#x2F;HOUCQ4869.github.io    coding: https:&#x2F;&#x2F;e.coding.net&#x2F;houcq4869&#x2F;houcq4869&#x2F;houcq4869.github.io.git  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>-&gt;导入外部仓库，即将github仓库导入至coding中<br>-&gt;修改分支，将默认分支改为main，注意可能要修改github默认分支为main，而不是master，可在\node_modules\hexo-deployer-git\lib\parse_config.js中查找master并改为main<br>-&gt;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d验证即可</p><p>网上许多方法都已过时，本篇作于2023年初，只具一定参考意义，可能并不会与时俱进，此外Coding Pages似乎也找不到，所以虽然实现了github，coding双线部署，但似乎并没有实现国内Coding，国外Github访问加速的目的，因此未完待续…… (感觉似乎快了些……)</p><h3 id="gulp4压缩静态文件"><a href="#gulp4压缩静态文件" class="headerlink" title="gulp4压缩静态文件"></a>gulp4压缩静态文件</h3><p>参考于<a href="https://blog.csdn.net/qq_43625917/article/details/104136304?app_version=5.7.2&code=app_1562916241&csdn_share_tail=%7B%22type%22:%22blog%22,%22rType%22:%22article%22,%22rId%22:%22104136304%22,%22source%22:%22unlogin%22%7D&uLinkId=usr1mkqgl919blen&utm_source=app">这篇博客</a>，如有问题可进一步查询<br>1.安装gulp工具  </p><pre class="line-numbers language-none"><code class="language-none">npm install gulp -g&#x2F;npm install gulp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.安装gulp插件  </p><pre class="line-numbers language-none"><code class="language-none">npm install gulp-minify-html gulp-minify-css gulp-uglify gulp-imagemin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.建立gulpfile.js文件<br>在博客根目录下新建文件gulpfile.js  </p><pre class="line-numbers language-none"><code class="language-none">var gulp &#x3D; require(&#39;gulp&#39;);&#x2F;&#x2F;Plugins模块获取var minifycss &#x3D; require(&#39;gulp-minify-css&#39;);var uglify &#x3D; require(&#39;gulp-uglify&#39;);var minifyhtml &#x3D; require(&#39;gulp-minify-html&#39;);&#x2F;&#x2F; 压缩 public 目录 css文件gulp.task(&#39;minify-css&#39;, function () &#123;    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.css&#39;)        .pipe(minifycss())        .pipe(gulp.dest(&#39;.&#x2F;public&#39;));&#125;);&#x2F;&#x2F; 压缩 public 目录 html文件gulp.task(&#39;minify-html&#39;, function () &#123;    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.html&#39;)        .pipe(minifyhtml())        .pipe(gulp.dest(&#39;.&#x2F;public&#39;))&#125;);&#x2F;&#x2F; 压缩 public&#x2F;js 目录 js文件，忽略&#x2F;public&#x2F;lib&#x2F;blog-encrypt.jsgulp.task(&#39;minify-js&#39;, function () &#123;    &#x2F;&#x2F;纠错前：return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.js&#39;)    return gulp.src([&#39;.&#x2F;public&#x2F;**&#x2F;*.js&#39;, &#39;!.&#x2F;public&#x2F;lib&#x2F;blog-encrypt.js&#39;])        .pipe(uglify())        .pipe(gulp.dest(&#39;.&#x2F;public&#39;))&#125;);&#x2F;&#x2F; 压缩图片&#x2F;&#x2F;gulp.task(&#39;minify-images&#39;, function() &#123;&#x2F;&#x2F;    return gulp.src(&#39;.&#x2F;public&#x2F;images&#x2F;**&#x2F;*.*&#39;)&#x2F;&#x2F;        .pipe(imagemin(&#x2F;&#x2F;        [imagemin.gifsicle(&#123;&#39;optimizationLevel&#39;: 3&#125;),&#x2F;&#x2F;        imagemin.jpegtran(&#123;&#39;progressive&#39;: true&#125;),&#x2F;&#x2F;        imagemin.optipng(&#123;&#39;optimizationLevel&#39;: 7&#125;),&#x2F;&#x2F;        imagemin.svgo()],&#x2F;&#x2F;        &#123;&#39;verbose&#39;: true&#125;))&#x2F;&#x2F;        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;images&#39;))&#x2F;&#x2F;&#125;);&#x2F;&#x2F;因为我图片用的第三方图床存放的，所以就没压缩图片。(并且最后测试压缩图片时，发现有点权限问题，&#x2F;&#x2F; 分别执行css、heml、js的压缩任务gulp.task(&#39;default&#39;, gulp.parallel(&#39;minify-css&#39;, &#39;minify-html&#39;, &#39;minify-js&#39;));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意上面的public目录是否为你的真实目录，**代表0或多个子目录  </p><p>4.部署执行  </p><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexio d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果出现提示未安装成功，再安装一次应该就可以<br>除此之外，可以在package.json文件里添加  </p><pre class="line-numbers language-none"><code class="language-none">&quot;scripts:&quot;&#123;    &quot;hexo&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d&quot;&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样就可以直接执行  </p><pre class="line-numbers language-none"><code class="language-none">npm run hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/11/hello-world/"/>
      <url>/2023/01/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
